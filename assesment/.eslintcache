[{"H:\\ANKIT_ASSESSMENT\\assesment\\src\\index.js":"1","H:\\ANKIT_ASSESSMENT\\assesment\\src\\theme.js":"2","H:\\ANKIT_ASSESSMENT\\assesment\\src\\App.js":"3","H:\\ANKIT_ASSESSMENT\\assesment\\src\\style.js":"4","H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\Table.js":"5","H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\LoginView.js":"6","H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\DashboardView.js":"7","H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\InventoryView.js":"8","H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\CustomersView.js":"9","H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\TransactionsView.js":"10","H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\ReportsView.js":"11","H:\\ANKIT_ASSESSMENT\\assesment\\src\\layouts\\DashboardLayout.js":"12","H:\\ANKIT_ASSESSMENT\\assesment\\src\\routes.js":"13","H:\\ANKIT_ASSESSMENT\\assesment\\src\\layouts\\MainLayout.js":"14","H:\\ANKIT_ASSESSMENT\\assesment\\src\\store.js":"15","H:\\ANKIT_ASSESSMENT\\assesment\\src\\reducers\\userReducers.js":"16","H:\\ANKIT_ASSESSMENT\\assesment\\src\\constants\\userConstants.js":"17","H:\\ANKIT_ASSESSMENT\\assesment\\src\\actions\\userActions.js":"18","H:\\ANKIT_ASSESSMENT\\assesment\\src\\actions\\productActions.js":"19","H:\\ANKIT_ASSESSMENT\\assesment\\src\\reducers\\productReducers.js":"20","H:\\ANKIT_ASSESSMENT\\assesment\\src\\constants\\productConstants.js":"21","H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\MainToolbar.js":"22","H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\ProductView.js":"23","H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\ProductModal.js":"24","H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\PdfButton.js":"25","H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\PdfDocument.js":"26","H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\ProductDetailsPdf.js":"27"},{"size":604,"mtime":1607443195673,"results":"28","hashOfConfig":"29"},{"size":827,"mtime":1607514537208,"results":"30","hashOfConfig":"29"},{"size":233,"mtime":1607443129106,"results":"31","hashOfConfig":"29"},{"size":5564,"mtime":1607596535692,"results":"32","hashOfConfig":"29"},{"size":8864,"mtime":1607614713988,"results":"33","hashOfConfig":"29"},{"size":5017,"mtime":1607491376331,"results":"34","hashOfConfig":"29"},{"size":1941,"mtime":1607592335180,"results":"35","hashOfConfig":"29"},{"size":1091,"mtime":1607497456197,"results":"36","hashOfConfig":"29"},{"size":248,"mtime":1607356112241,"results":"37","hashOfConfig":"29"},{"size":257,"mtime":1607356191106,"results":"38","hashOfConfig":"29"},{"size":242,"mtime":1607356180747,"results":"39","hashOfConfig":"29"},{"size":7380,"mtime":1607609694728,"results":"40","hashOfConfig":"29"},{"size":1433,"mtime":1607594593729,"results":"41","hashOfConfig":"29"},{"size":195,"mtime":1607356965073,"results":"42","hashOfConfig":"29"},{"size":859,"mtime":1607578756944,"results":"43","hashOfConfig":"29"},{"size":539,"mtime":1607362478551,"results":"44","hashOfConfig":"29"},{"size":208,"mtime":1607362060230,"results":"45","hashOfConfig":"29"},{"size":1039,"mtime":1607402232261,"results":"46","hashOfConfig":"29"},{"size":1906,"mtime":1607628078069,"results":"47","hashOfConfig":"29"},{"size":1326,"mtime":1607628069519,"results":"48","hashOfConfig":"29"},{"size":374,"mtime":1607578084543,"results":"49","hashOfConfig":"29"},{"size":818,"mtime":1607594039675,"results":"50","hashOfConfig":"29"},{"size":2438,"mtime":1607600404364,"results":"51","hashOfConfig":"29"},{"size":1103,"mtime":1607595674363,"results":"52","hashOfConfig":"29"},{"size":2192,"mtime":1607628522233,"results":"53","hashOfConfig":"29"},{"size":1134,"mtime":1607628537353,"results":"54","hashOfConfig":"29"},{"size":1278,"mtime":1607627703219,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1y9oyko",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\ANKIT_ASSESSMENT\\assesment\\src\\index.js",[],["115","116"],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\theme.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\App.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\style.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\Table.js",["117","118","119"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { Grid, TableHead } from '@material-ui/core';\r\nimport Moment from 'react-moment';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { listProducts } from '../actions/productActions';\r\nimport ProductModal from './ProductModal';\r\nimport ProductView from '../views/ProductView';\r\nimport PdfButton from './PdfButton';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label='first page'>\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label='previous page'>\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label='next page'>\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label='last page'>\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableHeader: {\r\n    backgroundColor: '#979797',\r\n  },\r\n  tableCell: {\r\n    fontWeight: 'bold',\r\n  },\r\n  iconColor: {\r\n    color: '#6F6F6F',\r\n    fontSize: 'small',\r\n  },\r\n});\r\n\r\nfunction InventoryTable() {\r\n  const classes = useStyles2();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { products, pages, currentPage } = productList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listProducts(page, rowsPerPage));\r\n    } else {\r\n      navigate('/login');\r\n    }\r\n  }, [dispatch, navigate, userInfo, page, rowsPerPage]);\r\n\r\n  const handleChangePage = (event, nextPage) => {\r\n    setPage(nextPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value), 10);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.container}>\r\n      <Table className={classes.table} aria-label='custom pagination table'>\r\n        <TableHead className={classes.tableHeader}>\r\n          <TableRow>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              SKU\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              Design Code\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              Material\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              Design Category\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              Diamond Ct.\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              Net Weight\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              Price\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              SKU Qty\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              Date\r\n            </TableCell>\r\n            <TableCell className={classes.tableCell} align='left'>\r\n              Action\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products.map((row) => (\r\n            <TableRow key={row.design_code}>\r\n              <TableCell align='left'>{row.sku_number}</TableCell>\r\n              <TableCell align='left'>{row.design_code}</TableCell>\r\n              <TableCell align='left'>{row.metal_type}</TableCell>\r\n              <TableCell align='left'>{row.design_category}</TableCell>\r\n              <TableCell align='left'>{row.diamond_weight}</TableCell>\r\n              <TableCell align='left'>{row.net_weight}</TableCell>\r\n              <TableCell align='left'>{row.sales_value}</TableCell>\r\n              <TableCell align='left'>{row.sku_quantity}</TableCell>\r\n              <TableCell align='left'>\r\n                <Moment format='DD-MM-YYYY'>{row.createdAt}</Moment>\r\n              </TableCell>\r\n              <TableCell align='left'>\r\n                <Grid container >\r\n                  <Grid item>\r\n                    <InfoBtn id={row.sku_number} />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <PdfButton id={row.sku_number} />\r\n                  </Grid>\r\n                </Grid>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={pages * rowsPerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              page={currentPage}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\nconst InfoBtn = ({ id }) => {\r\n  const classes = useStyles2();\r\n  const navigate = useNavigate();\r\n  function handleOnClick() {\r\n    navigate({\r\n      pathname: `/p/${id}`,\r\n      state: { modal: true },\r\n    });\r\n  }\r\n  return (\r\n    <IconButton onClick={handleOnClick}>\r\n      <VisibilityIcon className={classes.iconColor} />\r\n    </IconButton>\r\n  );\r\n};\r\n// const PdfBtn = ({id}) =>{\r\n//   const classes = useStyles2();\r\n//   const navigate = useNavigate();\r\n//   function handleOnClick() {\r\n//     navigate({\r\n//       pathname: `/p/${id}`,\r\n//       state: { modal: true },\r\n//     });\r\n//   }\r\n//   return (\r\n//     <>\r\n\r\n//         <IconButton >\r\n//           <PictureAsPdfIcon className={classes.iconColor} />\r\n//         </IconButton>\r\n\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport default InventoryTable;\r\n","H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\LoginView.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\DashboardView.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\InventoryView.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\CustomersView.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\TransactionsView.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\ReportsView.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\layouts\\DashboardLayout.js",["120"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport LineStyleIcon from '@material-ui/icons/LineStyle';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport { useSidebarStyles } from '../style';\r\nimport MainToolbar from '../components/MainToolbar';\r\nimport logo2 from '../images/logo2.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // color: '#000',\r\n    backgroundColor: (props) => props.color,\r\n    '&:hover': {\r\n      backgroundColor: (props) => props.color,\r\n    },\r\n\r\n    '& span': {\r\n      fontWeight: '600 !important',\r\n    },\r\n   \r\n  },\r\n \r\n  listItemButton: {\r\n    marginLeft: 6,\r\n    color: '#f44336 !important',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: (props) => props.color,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  menuBar: {\r\n    color: '#000',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [open, setOpen] = useState(false);\r\n  const [path, setPath] = useState('');\r\n  const [title, setTitle] = useState('Dashboard');\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [color, setColor] = useState('#c60055 ');\r\n  \r\n  const classes = useSidebarStyles({color: `${color}`});\r\n  const classes2 = useStyles({\r\n    color: `${color}`,\r\n    hover: `#000`,\r\n    iconColor: '#c60055',\r\n  });\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const options = [\r\n    {\r\n      name: 'Dashboard',\r\n      icon: <DashboardIcon />,\r\n      path: '/dashboard',\r\n      onClick: () => {\r\n        navigate('/dashboard');\r\n        setTitle('Dashboard');\r\n      },\r\n    },\r\n    {\r\n      name: 'Inventory',\r\n      icon: <LineStyleIcon />,\r\n      path: '/inventory',\r\n      onClick: () => {\r\n        navigate('/inventory');\r\n        setTitle('Inventory');\r\n      },\r\n    },\r\n    {\r\n      name: 'Transactions',\r\n      icon: <ReceiptIcon />,\r\n      path: '/transactions',\r\n      onClick: () => {\r\n        navigate('/transactions');\r\n        setTitle('Transactions');\r\n      },\r\n    },\r\n    {\r\n      name: 'Customers',\r\n      icon: <PeopleIcon />,\r\n      path: '/customers',\r\n      onClick: () => {\r\n        navigate('/customers');\r\n        setTitle('Customers');\r\n      },\r\n    },\r\n    {\r\n      name: 'Reports',\r\n      icon: <BarChartIcon />,\r\n      path: '/reports',\r\n      onClick: () => {\r\n        navigate('/reports');\r\n        setTitle('Reports');\r\n      },\r\n    },\r\n  ];\r\n  React.useEffect(() => {\r\n    setPath(location.pathname);\r\n  }, [location, setPath]);\r\n\r\n  const activeRoute = (route) => {\r\n    return route === path;\r\n  };\r\n\r\n  const colors = [\r\n    {\r\n      class: classes.magenta,\r\n      onClick: () => {\r\n        handleClose();\r\n        setColor('#c60055');\r\n      },\r\n    },\r\n    {\r\n      class: classes.red,\r\n      onClick: () => {\r\n        handleClose();\r\n        setColor('#c0392b');\r\n      },\r\n    },\r\n    {\r\n      class: classes.green,\r\n      onClick: () => {\r\n        handleClose();\r\n        setColor('#27ae60');\r\n      },\r\n    },\r\n    {\r\n      class: classes.pink,\r\n      onClick: () => {\r\n        handleClose();\r\n        setColor('#34495e');\r\n      },\r\n    },\r\n    {\r\n      class: classes.indigo,\r\n      onClick: () => {\r\n        handleClose();\r\n        setColor('#2980b9');\r\n      },\r\n    },\r\n    {\r\n      class: classes.purple,\r\n      onClick: () => {\r\n        handleClose();\r\n        setColor('#8e44ad');\r\n      },\r\n    },\r\n  ];\r\n\r\n  const drawer = (\r\n    <>\r\n      <div className={classes.toolbar} style={{ backgroundColor: `#fff` }}>\r\n        <img\r\n          src={logo2}\r\n          alt='logo'\r\n          style={{ width: '80%', marginRight: '1.5rem' }}\r\n          onClick={handleDrawerClose}\r\n        />\r\n      </div>\r\n      <List>\r\n        {options.map((option, index) => {\r\n          const { icon, name, onClick } = option;\r\n          return (\r\n            <ListItem\r\n              button\r\n              key={index}\r\n              onClick={onClick}\r\n              selected={activeRoute(option.path)}\r\n              classes={{\r\n                selected: classes.listItemSelected,\r\n                button: classes.listItemButton,\r\n              }}>\r\n              <ListItemIcon className={classes.listIcons}>{icon}</ListItemIcon>\r\n              <ListItemText primary={name} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem\r\n          aria-controls='simple-menu'\r\n          aria-haspopup='true'\r\n          onClick={handleClick}>\r\n          <ListItemIcon className={classes.listIcons}>\r\n            <PaletteIcon />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n\r\n        <Menu\r\n          id='simple-menu'\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}>\r\n          {colors.map((clr) => (\r\n            <MenuItem onClick={clr.onClick}>\r\n              <span className={clr.class}></span>\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </List>\r\n    </>\r\n  );\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <AppBar\r\n          position='fixed'\r\n          className={clsx(classes2.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}>\r\n          <MainToolbar\r\n            title={title}\r\n            open={open}\r\n            handleDrawerOpen={handleDrawerOpen}\r\n            classes2={classes2.menuBar}\r\n          />\r\n        </AppBar>\r\n        <Drawer\r\n          variant='permanent'\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}>\r\n          {drawer}\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Outlet />\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","H:\\ANKIT_ASSESSMENT\\assesment\\src\\routes.js",["121"],"import React from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\nimport DashboardView from './views/DashboardView';\r\nimport InventoryView from './views/InventoryView';\r\nimport TransactionsView from './views/TransactionsView';\r\nimport CustomersView from './views/CustomersView';\r\nimport ReportsView from './views/ReportsView';\r\nimport LoginView from './views/LoginView';\r\nimport DashboardLayout from './layouts/DashboardLayout';\r\nimport MainLayout from './layouts/MainLayout';\r\nimport ProductView from './views/ProductView';\r\nimport ProductModal from './components/ProductModal';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'dashboard', element: <DashboardView /> },\r\n      { path: 'inventory', element: <InventoryView /> },\r\n      { path: 'p/:id', element: <ProductModal /> },\r\n      { path: 'transactions', element: <TransactionsView /> },\r\n      { path: 'customers', element: <CustomersView /> },\r\n      { path: 'reports', element: <ReportsView /> },\r\n    ],\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n    //   { path: 'register', element: <RegisterView /> },\r\n    //   { path: '404', element: <NotFoundView /> },\r\n    //   { path: '/', element: <Navigate to='/login' /> },\r\n    //   { path: '*', element: <Navigate to='/404' /> },\r\n    ],\r\n  },\r\n];\r\nexport default routes;","H:\\ANKIT_ASSESSMENT\\assesment\\src\\layouts\\MainLayout.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\store.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\reducers\\userReducers.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\constants\\userConstants.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\actions\\userActions.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\actions\\productActions.js",["122"],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\reducers\\productReducers.js",["123"],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\constants\\productConstants.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\MainToolbar.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\views\\ProductView.js",["124","125","126"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link as RouterLink, useParams } from 'react-router-dom';\r\n\r\nimport { useProductStyles } from '../style';\r\nimport { listProductDetails } from '../actions/productActions';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Divider, Grid, Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nconst ProductView = ({ match }) => {\r\n  const classes = useProductStyles();\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { product, img, error } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails('BG000050'));\r\n  }, [dispatch, params.match]);\r\n  return (\r\n    <>\r\n      <div className={classes.header}>\r\n        <RouterLink to='/inventory' mb={3} className={classes.link}>\r\n          <ArrowBackIosIcon style={{ fontSize: 'small' }} /> Back to Inventory\r\n        </RouterLink>\r\n        <Typography variant='h5' noWrap className={classes.typo}>\r\n          Inventory &gt;&gt; BG000050\r\n        </Typography>\r\n      </div>\r\n      <Grid container direction='row' xs={12} alignItems='center'>\r\n        <Grid item xs={6}>\r\n          <img src={img} alt='Product Img' className={classes.image} />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography color='textSecondary' variant='h6'>\r\n            rfid_number: BG000050\r\n          </Typography>\r\n          <Divider />\r\n          <Typography color='textSecondary' variant='h6'>\r\n            sku_number:BG000050\r\n          </Typography>\r\n          <Divider />\r\n          <Typography color='textSecondary' variant='h6'>\r\n            Design Code: 50\r\n          </Typography>\r\n          <Divider />\r\n          <Typography color='textSecondary' variant='h6'>\r\n            design_category: BNG\r\n          </Typography>\r\n          <Divider />\r\n          <Typography color='textSecondary' variant='h6'>\r\n            design_color: Y\r\n          </Typography>\r\n          <Divider />\r\n          <Typography color='textSecondary' variant='h6'>\r\n            sku_quantity: 50\r\n          </Typography>\r\n          <Divider />\r\n          <Typography color='textSecondary' variant='h6'>\r\n            sales_value: 7150\r\n          </Typography>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n","H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\ProductModal.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\PdfButton.js",["127","128","129"],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\PdfDocument.js",[],"H:\\ANKIT_ASSESSMENT\\assesment\\src\\components\\ProductDetailsPdf.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":22,"column":8,"nodeType":"136","messageId":"137","endLine":22,"endColumn":24},{"ruleId":"134","severity":1,"message":"138","line":25,"column":8,"nodeType":"136","messageId":"137","endLine":25,"endColumn":20},{"ruleId":"134","severity":1,"message":"139","line":26,"column":8,"nodeType":"136","messageId":"137","endLine":26,"endColumn":19},{"ruleId":"134","severity":1,"message":"140","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":15},{"ruleId":"134","severity":1,"message":"139","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":19},{"ruleId":"134","severity":1,"message":"141","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":16},{"ruleId":"134","severity":1,"message":"142","line":2,"column":3,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"144","line":18,"column":11,"nodeType":"136","messageId":"137","endLine":18,"endColumn":18},{"ruleId":"134","severity":1,"message":"145","line":18,"column":25,"nodeType":"136","messageId":"137","endLine":18,"endColumn":30},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"146","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"145","line":31,"column":25,"nodeType":"136","messageId":"137","endLine":31,"endColumn":30},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'PictureAsPdfIcon' is defined but never used.","Identifier","unusedVar","'ProductModal' is defined but never used.","'ProductView' is defined but never used.","'Divider' is defined but never used.","'logout' is defined but never used.","'PRODUCT_LIST_REQUEST' is defined but never used.","'useState' is defined but never used.","'product' is assigned a value but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]